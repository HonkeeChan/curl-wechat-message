#encoding: utf8
import sys
from PyQt4 import QtCore, QtGui, uic
from PyQt4.QtCore import Qt
import logging
import threading

logger = logging.getLogger("wechat_message")
logger.setLevel(logging.DEBUG)
# 创建一个handler，用于写入日志文件
fh = logging.FileHandler("wechat_message.log")
fh.setLevel(logging.DEBUG)

# 再创建一个handler，用于输出到控制台
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)

# 定义handler的输出格式
formatter = logging.Formatter('%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s')
fh.setFormatter(formatter)
ch.setFormatter(formatter)

# 给logger添加handler
logger.addHandler(fh)
logger.addHandler(ch)


groupArr = [
    {"id": "chenhongjian1", "name": "陈洪健1"},
    {"id": "chenhongjian2", "name": "陈洪健2"},
    {"id": "chenhongjian3", "name": "陈洪健3"},
    {"id": "chenhongjian4", "name": "陈洪健4"},
    {"id": "chenhongjian5", "name": "陈洪健5"},
    {"id": "chenhongjian6", "name": "陈洪健6"},
    {"id": "chenhongjian7", "name": "陈洪健7"},
    {"id": "chenhongjian8", "name": "陈洪健8"},
    {"id": "chenhongjian9", "name": "陈洪健9"},
]
selectGroupMap = {}
# selectGroupMap["chenhongjian1"] = {
#     "name": "陈洪健1", 
#     "config":{
#         "id": 1
#     }
# }
# selectGroupMap["chenhongjian2"] = {
#     "name": "陈洪健2", 
#     "config":{
#         "id": 2
#     }
# }

loginUIFile = "login.ui" # Enter file here.
mainUIFile = "main_window.ui"
Login_Ui_Dialog, QtBaseClass = uic.loadUiType(loginUIFile)
Main_Ui_MainWindow, QtBaseClass = uic.loadUiType(mainUIFile)



class LoginWindow(QtGui.QDialog, Login_Ui_Dialog):
    def __init__(self, mainWindow):
        QtGui.QMainWindow.__init__(self)
        Login_Ui_Dialog.__init__(self)
        self.setupUi(self)
        self.loginBtn.clicked.connect(self.OnLogin)
        self.mainWindow = mainWindow

    def OnLogin(self):
        print("username: %s" % self.usernameInput.text())
        print("password: %s" % self.passwordInput.text())
        self.hide()
        self.mainWindow.show()

# class GroupNameLabel(QtGui.QLabel):
#     def __init__(self):
#         QtGui.QLabel.__init__(self)

class MainWindow(QtGui.QMainWindow, Main_Ui_MainWindow):
    def __init__(self):
        QtGui.QMainWindow.__init__(self)
        Main_Ui_MainWindow.__init__(self)
        self.setupUi(self)
        self.loginWindow = LoginWindow(self)
        self.hide()
        self.loginWindow.show()
        self.ShowQr()
        self.loadBtn.clicked.connect(self.OnLoadFinish)
        self.saveBtn.clicked.connect(self.OnSaveBtn)
        self.preSelectIdx = -1

    def ShowQr(self):
        self.pic = QtGui.QLabel(self)
        pixmap = QtGui.QPixmap("wxqr.png")
        self.pic.setPixmap(pixmap)
        self.pic.resize(pixmap.width(), pixmap.height())


    def ShowGroupName(self):

        self.listWidget = QtGui.QListWidget()
        for group in groupArr:
            item = QtGui.QListWidgetItem(group["name"].decode("utf8"), self.listWidget)
            item.setFlags(Qt.ItemIsUserCheckable | Qt.ItemIsEnabled | Qt.ItemIsSelectable)
            item.setCheckState(Qt.Unchecked)
            self.listWidget.addItem(item)
            
        self.listWidget.currentRowChanged.connect(self.OnListWidgetRowChanged)
        self.listWidget.itemClicked.connect(self.OnListWidgetItemClicked)
        self.groupNameScroll.setWidget(self.listWidget)

    def SaveConfig(self):
        if self.preSelectIdx != -1 and self.preSelectIdx < len(groupArr):
            logger.info("save config")
            if selectGroupMap.has_key(groupArr[self.preSelectIdx]["id"]):
                groupId = groupArr[self.preSelectIdx]["id"]
                config = selectGroupMap[groupId]["config"]
                config["id"] = self.configId.text()


    def OnListWidgetRowChanged(self, idx):
        self.SaveConfig()
        self.preSelectIdx = idx
        if selectGroupMap.has_key(groupArr[idx]["id"]):
            groupId = groupArr[self.preSelectIdx]["id"]
            config = selectGroupMap[groupId]["config"]
            if config.has_key("id"):
                self.configId.setText(config["id"])
        else:
            self.configId.setText("")

    def OnListWidgetItemClicked(self, item):
        # 处理勾选的列表
        groupCnt = self.listWidget.count()
        for i in range(groupCnt):
            if self.listWidget.item(i).checkState() == Qt.Checked:
                if not selectGroupMap.has_key(groupArr[i]["id"]):
                    selectGroupMap[groupArr[i]["id"]] = {}
                    selectGroupMap[groupArr[i]["id"]]["name"] = groupArr[i]["name"]
                    config = selectGroupMap[groupArr[i]["id"]]["config"] = {}

        logger.info("select group map: %s", selectGroupMap)

    def OnLoadFinish(self):
        self.pic.hide()
        self.ShowGroupName()

    def OnSaveBtn(self):
        pass


if __name__ == "__main__":
    app = QtGui.QApplication(sys.argv)
    mainWindow = MainWindow()
    sys.exit(app.exec_())